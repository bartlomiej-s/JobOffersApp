@model WebApplication1.Models.JobApplication

@{
    ViewData["Title"] = "Apply";
}

<div class="row page-box">
    <div class="col-sm-12">
        <h2>New application for: @Html.ActionLink(Model.Offer.JobTitle, "Details", "JobOffer", new { id = Model.OfferId }) <span data-bind="text: fullName" /></h2>
        @using (Html.BeginForm("Apply", "JobApplication", null, FormMethod.Post, true, new { id = "Form" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(m => m.FirstName)
                @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control", required = "true", minlength = "2", maxlength = "30", data_bind = "value: firstName, valueUpdate: 'afterkeydown'" } })
                @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName)
                @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control", required = "true", minlength = "2", maxlength = "50", data_bind = "value: lastName, valueUpdate: 'afterkeydown'" } })
                @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber)
                @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control", type = "tel", minlength = "9", maxlength = "9", digits = "true", pattern = "^[0-9]*$", title = "Proszę wprowadzić wyłącznie cyfry" } })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress)
                @Html.EditorFor(m => m.EmailAddress, new { htmlAttributes = new { @class = "form-control", type = "email", minlength = "5", maxlength = "50", email = "true", pattern = "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$", title = "Proszę wprowadzić poprawny adres email" } })
                @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DateOfBirth)
                <div class="input-group">
                    @Html.EditorFor(m => m.DateOfBirth, new { htmlAttributes = new { @class = "form-control", type = "Date", date = "true", name = "DateOfBirth" } })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.CvUrl)
                @Html.EditorFor(m => m.CvUrl, new { htmlAttributes = new { @class = "form-control", type = "url", minlength = "3", maxlength = "100", url = "true" } })
                @Html.ValidationMessageFor(m => m.CvUrl, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Enter description", minlength = "5", maxlength = "1000" })
                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ContactAgreement) <br>
                @Html.CheckBoxFor(m => m.ContactAgreement, new { @class = "text-danger", required = "true" })
                @Html.ValidationMessageFor(m => m.ContactAgreement, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.HiddenFor(m => m.OfferId)
                <a asp-area="" asp-controller="JobOffer" asp-action="Details" asp-route-id="@Model.OfferId">
                    <button type="button" class="btn btn-rounded btn-secondary mr-2">
                        <i class="fas fa-chevron-left pr-2"></i>
                        Cancel
                    </button>
                </a>
                <button type="submit" class="btn btn-rounded btn-primary">
                    <i class="fas fa-check pr-2"></i>
                    Save
                </button>
            </div>
        }
    </div>
</div>

@section Scripts{
    <script type="text/javascript" src="http://knockoutjs.com/downloads/knockout-2.2.1.js"></script>
    <script src="http://code.jquery.com/jquery-1.9.0.min.js"></script>
    <script type="text/javascript">
        window.onload = function () {
            var ViewModel = function (first, last) {
                this.firstName = ko.observable(first);
                this.lastName = ko.observable(last);

                this.fullName = ko.computed(function () {
                    if (this.firstName() == "" && this.lastName() == "") return "";
                    return " by " + this.firstName() + " " + this.lastName();
                }, this);
            };
            $(function () {
                ko.applyBindings(new ViewModel("", ""));
            });
        }
    </script>
    <script>
        var today = new Date().toISOString().split('T')[0];
        document.getElementsByName("DateOfBirth")[0].setAttribute('max', today);
        $("#Form").validate();
    </script>
}
